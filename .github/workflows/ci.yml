name: Qorzen CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [opened, reopened, synchronize, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qorzen_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
        python -m pip install -r requirements.txt

    - name: Test with tox
      run: tox
      env:
        NEXUS_DATABASE_HOST: localhost
        NEXUS_DATABASE_PORT: 5432
        NEXUS_DATABASE_NAME: qorzen_test
        NEXUS_DATABASE_USER: postgres
        NEXUS_DATABASE_PASSWORD: postgres

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions black isort

    - name: Auto-format code with Black
      run: black . --check || black .

    - name: Auto-sort imports with isort
      run: isort . --check-only || isort .

    - name: Lint
      run: tox -e lint

    - name: Type check
      run: tox -e typecheck

    - name: Format check
      run: tox -e format-check

    - name: Security check
      run: tox -e security

  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions

    - name: Build documentation
      run: tox -e docs

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/build/
        if-no-files-found: error

  build-docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: qorzen:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release-drafter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Draft Release Notes
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

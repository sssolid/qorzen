version: '3.8'

services:
  qorzen:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qorzen
    restart: unless-stopped
    environment:
      - NEXUS_APP_ENVIRONMENT=production
      - NEXUS_DATABASE_HOST=postgres
      - NEXUS_DATABASE_PORT=5432
      - NEXUS_DATABASE_NAME=qorzen
      - NEXUS_DATABASE_USER=postgres
      - NEXUS_DATABASE_PASSWORD=postgres
      - NEXUS_API_HOST=0.0.0.0
      - NEXUS_API_PORT=8000
      - NEXUS_LOGGING_LEVEL=INFO
    ports:
      - "8000:8000"  # API
      - "9090:9090"  # Prometheus metrics
    volumes:
      - nexus-data:/app/data
      - nexus-logs:/app/logs
      - nexus-config:/app/config
    depends_on:
      - postgres
    networks:
      - nexus-network
    command: ["--headless", "--config=/app/config/config.yaml"]

  postgres:
    image: postgres:14-alpine
    container_name: nexus-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qorzen
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - nexus-network

  grafana:
    image: grafana/grafana:latest
    container_name: nexus-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - nexus-network

volumes:
  nexus-data:
  nexus-logs:
  nexus-config:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  nexus-network:
    driver: bridge
